@charset "UTF-8";
/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

html {
  font-size: 14px; }
  @media screen and (min-width: 332px) {
    html {
      font-size: calc(14px + 4 * (100vw - 332px) / 328); } }
  @media screen and (min-width: 660px) {
    html {
      font-size: 18px; } }

body {
  font-size: 1rem;
  line-height: 1.6; }

h1 {
  font-size: 1.29454rem; }

h2 {
  font-size: 1.21363rem; }

h3 {
  font-size: 1.13778rem; }

h4 {
  font-size: 1.06667rem; }

h5 {
  font-size: 1rem; }

h6 {
  font-size: 0.9375rem; }

code {
  line-height: 1; }

body {
  font-family: serif;
  color: #232323; }

.fonts-stage-1 body {
  font-family: VollkornSubset, serif;
  font-style: normal;
  font-weight: 400; }

.fonts-stage-1 h1,
.fonts-stage-1 h2,
.fonts-stage-1 h3,
.fonts-stage-1 h4,
.fonts-stage-1 h5,
.fonts-stage-1 h6 {
  font-family: PlayfairDisplaySubset, serif;
  font-style: normal;
  font-weight: 400;
  text-transform: uppercase;
  letter-spacing: calc(75 / 1000 * 1em); }

.fonts-stage-2 body {
  font-family: Vollkorn, serif;
  font-style: normal;
  font-weight: 400; }

.fonts-stage-1 h1,
.fonts-stage-1 h2,
.fonts-stage-1 h3,
.fonts-stage-1 h4,
.fonts-stage-1 h5,
.fonts-stage-1 h6 {
  font-family: "Playfair Display", serif;
  font-style: normal;
  font-weight: 400;
  text-transform: uppercase;
  letter-spacing: calc(75 / 1000 * 1em); }
  .fonts-stage-1 h1 a,
  .fonts-stage-1 h2 a,
  .fonts-stage-1 h3 a,
  .fonts-stage-1 h4 a,
  .fonts-stage-1 h5 a,
  .fonts-stage-1 h6 a {
    color: inherit;
    text-decoration: none; }

code {
  font-family: "Courier New", Courier, monospace; }

.header {
  background-image: -webkit-gradient(linear, left top, right top, color-stop(50%, transparent), color-stop(50%, rgba(224, 18, 88, 0.15))), radial-gradient(circle at center bottom, rgba(236, 50, 17, 0.7), rgba(224, 18, 88, 0.7));
  background-image: linear-gradient(to right, transparent 50%, rgba(224, 18, 88, 0.15) 50%), radial-gradient(circle at center bottom, rgba(236, 50, 17, 0.7), rgba(224, 18, 88, 0.7)); }
  @media (min-width: 41.25em) {
    .header {
      background-image: -webkit-gradient(linear, left top, left bottom, color-stop(48%, transparent), color-stop(48%, rgba(224, 18, 88, 0.15))), radial-gradient(circle at center bottom, rgba(236, 50, 17, 0.7), rgba(224, 18, 88, 0.7));
      background-image: linear-gradient(to bottom, transparent 48%, rgba(224, 18, 88, 0.15) 48%), radial-gradient(circle at center bottom, rgba(236, 50, 17, 0.7), rgba(224, 18, 88, 0.7)); } }

.nav__checkbox {
  position: absolute;
  left: -9999px; }

.nav__toggle {
  display: block;
  position: absolute;
  top: calc(1.66667 * 1rem);
  right: calc(1.11111 * 1rem);
  height: calc(2.22222 * 1rem);
  width: calc(2.22222 * 1rem);
  border-radius: calc(0.27778 * 1rem);
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(20%, #e01258), color-stop(20%, transparent), color-stop(40%, transparent), color-stop(40%, #e01258), color-stop(60%, #e01258), color-stop(60%, transparent), color-stop(80%, transparent), color-stop(80%, #e01258));
  background-image: linear-gradient(to bottom, #e01258 20%, transparent 20%, transparent 40%, #e01258 40%, #e01258 60%, transparent 60%, transparent 80%, #e01258 80%);
  text-indent: -9999px;
  cursor: pointer;
  z-index: 1;
  -webkit-transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81);
  transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81); }
  .nav__checkbox:checked + .nav__toggle {
    background-image: linear-gradient(45deg, transparent 40%, #e01258 40%, #e01258 60%, transparent 60%), linear-gradient(-45deg, transparent 40%, #e01258 40%, #e01258 60%, transparent 60%); }
  @media (min-width: 41.25em) {
    .nav__toggle {
      display: none; } }

.nav__list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  list-style: none;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 0;
  margin: 0; }
  @media (min-width: 41.25em) {
    .nav__list {
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
          -ms-flex-direction: row;
              flex-direction: row;
      -webkit-box-align: stretch;
          -ms-flex-align: stretch;
              align-items: stretch; } }

.nav__item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 0;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  width: 120px;
  -webkit-transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81);
  transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81); }
  .nav__item:hover {
    background-color: #e01258; }
  @media (max-width: 41.24em) {
    .nav__item:not(:nth-child(1)) {
      display: none; }
      .nav__checkbox:checked ~ .nav__list .nav__item:not(:nth-child(1)) {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex; } }
  @media (min-width: 41.25em) {
    .nav__item:nth-child(-n + 3) {
      -webkit-box-ordinal-group: 1;
          -ms-flex-order: 0;
              order: 0; }
    .nav__item:nth-child(n + 4) {
      -webkit-box-ordinal-group: 3;
          -ms-flex-order: 2;
              order: 2; }
    .nav__item:nth-child(1) {
      -webkit-box-ordinal-group: 2;
          -ms-flex-order: 1;
              order: 1; } }

.nav__link {
  font-size: 0.77248rem;
  padding: calc(0.83333 * 1rem) calc(1.66667 * 1rem);
  position: relative;
  color: #fff;
  text-decoration: none;
  text-transform: uppercase;
  text-shadow: 0 1px 1px #e01258;
  letter-spacing: calc(100 / 1000 * 1em); }
  .nav__link svg {
    display: block;
    height: calc(2.77778 * 1rem);
    width: calc(2.77778 * 1rem);
    border-radius: calc(1.94444 * 1rem);
    background-color: #fff;
    border: calc(0.55556 * 1rem) solid #fff; }

.details {
  font-size: 0.87891rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  border-top: 1px solid transparent;
  border-bottom: 1px solid transparent;
  background-color: #fff;
  background-clip: padding-box;
  position: relative;
  padding: calc(0.27778 * 1rem) 0;
  margin-top: calc(0.38889 * 1rem); }
  .details:before {
    content: "";
    position: absolute;
    top: -1px;
    right: 0;
    bottom: -1px;
    left: 0;
    background-image: -webkit-gradient(linear, left top, right top, color-stop(50%, transparent), color-stop(50%, rgba(250, 196, 214, 0.15))), radial-gradient(circle at center bottom, rgba(251, 212, 206, 0.7), rgba(250, 196, 214, 0.7));
    background-image: linear-gradient(to right, transparent 50%, rgba(250, 196, 214, 0.15) 50%), radial-gradient(circle at center bottom, rgba(251, 212, 206, 0.7), rgba(250, 196, 214, 0.7));
    z-index: -1; }
  @media (min-width: 41.25em) {
    .details {
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
          -ms-flex-direction: row;
              flex-direction: row;
      -webkit-box-align: baseline;
          -ms-flex-align: baseline;
              align-items: baseline; } }

.details__list {
  padding: 0;
  margin: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  list-style: none; }
  @media (min-width: 41.25em) {
    .details__list {
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
          -ms-flex-direction: row;
              flex-direction: row;
      -webkit-box-align: baseline;
          -ms-flex-align: baseline;
              align-items: baseline; } }

@media (min-width: 41.25em) {
  .details__item + .details__item {
    margin-left: calc(0.55556 * 1rem); } }

.footer {
  font-family: sans-serif;
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(48%, transparent), color-stop(48%, rgba(246, 149, 182, 0.15))), radial-gradient(circle at center bottom, rgba(248, 172, 158, 0.7), rgba(246, 149, 182, 0.7));
  background-image: linear-gradient(to bottom, transparent 48%, rgba(246, 149, 182, 0.15) 48%), radial-gradient(circle at center bottom, rgba(248, 172, 158, 0.7), rgba(246, 149, 182, 0.7));
  color: #e01258;
  font-size: 0.7242rem;
  padding: calc(0.27778 * 1rem);
  margin-top: calc(2.77778 * 1rem);
  text-align: center; }

.contact {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: baseline;
      -ms-flex-align: baseline;
          align-items: baseline;
  list-style: none;
  padding: 0;
  margin: 0; }

.contact__item + .contact__item {
  margin-left: calc(0.55556 * 1rem); }

body {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap; }

.wrapper {
  margin-left: auto;
  margin-right: auto;
  padding: calc(0.55556 * 1rem);
  max-width: calc(100% - calc(1.11111 * 1rem)); }
  @media (min-width: 41.25em) {
    .wrapper {
      max-width: 640px;
      padding: calc(0.55556 * 1rem) 0; } }

.pagination {
  margin-top: calc(2.77778 * 1rem);
  margin-bottom: calc(2.77778 * 1rem); }

.pagination__list {
  padding: 0;
  margin: 0;
  list-style: none; }

.pagination__item {
  margin-bottom: calc(1.11111 * 1rem); }

.pagination__link {
  font-size: 1.13778rem;
  color: #636363;
  -webkit-transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81);
  transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81); }
  .pagination__link:hover, .pagination__link:focus {
    color: #232323; }

.tally {
  font-family: Vollkorn, serif;
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(48%, transparent), color-stop(48%, rgba(224, 18, 88, 0.15))), radial-gradient(circle at center bottom, rgba(236, 50, 17, 0.7), rgba(224, 18, 88, 0.7));
  background-image: linear-gradient(to bottom, transparent 48%, rgba(224, 18, 88, 0.15) 48%), radial-gradient(circle at center bottom, rgba(236, 50, 17, 0.7), rgba(224, 18, 88, 0.7));
  color: #fff;
  font-size: 0.77248rem;
  padding: calc(0.27778 * 1rem) calc(0.55556 * 1rem) calc(0.11111 * 1rem);
  margin-top: calc(0.27778 * 1rem);
  margin-bottom: calc(0.27778 * 1rem);
  border-radius: calc(0.27778 * 1rem);
  text-decoration: none;
  letter-spacing: calc(50 / 1000 * 1em);
  -webkit-box-shadow: 0 1px 4px -1px rgba(35, 35, 35, 0.6);
          box-shadow: 0 1px 4px -1px rgba(35, 35, 35, 0.6);
  text-shadow: 0 1px 1px #e01258;
  -webkit-transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81);
  transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81);
  position: relative; }
  .tally + .tally {
    margin-left: calc(0.55556 * 1rem); }
  .tally[href*="mail"] {
    text-shadow: 0 1px 1px #e01258;
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(48%, transparent), color-stop(48%, rgba(177, 14, 69, 0.15))), radial-gradient(circle at center bottom, rgba(239, 54, 117, 0.7), rgba(177, 14, 69, 0.7));
    background-image: linear-gradient(to bottom, transparent 48%, rgba(177, 14, 69, 0.15) 48%), radial-gradient(circle at center bottom, rgba(239, 54, 117, 0.7), rgba(177, 14, 69, 0.7)); }
  .tally[href*="twitter"] {
    text-shadow: 0 1px 1px #55acee;
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(48%, transparent), color-stop(48%, rgba(20, 123, 201, 0.15))), radial-gradient(circle at center bottom, rgba(85, 172, 238, 0.7), rgba(20, 123, 201, 0.7));
    background-image: linear-gradient(to bottom, transparent 48%, rgba(20, 123, 201, 0.15) 48%), radial-gradient(circle at center bottom, rgba(85, 172, 238, 0.7), rgba(20, 123, 201, 0.7)); }
  .tally[href*="linkedin"] {
    text-shadow: 0 1px 1px #0077b5;
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(48%, transparent), color-stop(48%, rgba(0, 85, 130, 0.15))), radial-gradient(circle at center bottom, rgba(0, 153, 232, 0.7), rgba(0, 85, 130, 0.7));
    background-image: linear-gradient(to bottom, transparent 48%, rgba(0, 85, 130, 0.15) 48%), radial-gradient(circle at center bottom, rgba(0, 153, 232, 0.7), rgba(0, 85, 130, 0.7)); }
  .tally[href*="facebook"] {
    text-shadow: 0 1px 1px #3b5998;
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(48%, transparent), color-stop(48%, rgba(45, 67, 115, 0.15))), radial-gradient(circle at center bottom, rgba(76, 112, 186, 0.7), rgba(45, 67, 115, 0.7));
    background-image: linear-gradient(to bottom, transparent 48%, rgba(45, 67, 115, 0.15) 48%), radial-gradient(circle at center bottom, rgba(76, 112, 186, 0.7), rgba(45, 67, 115, 0.7)); }
  .tally[href*="medium"] {
    text-shadow: 0 1px 1px #00ab6b;
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(48%, transparent), color-stop(48%, rgba(0, 120, 75, 0.15))), radial-gradient(circle at center bottom, rgba(0, 222, 139, 0.7), rgba(0, 120, 75, 0.7));
    background-image: linear-gradient(to bottom, transparent 48%, rgba(0, 120, 75, 0.15) 48%), radial-gradient(circle at center bottom, rgba(0, 222, 139, 0.7), rgba(0, 120, 75, 0.7)); }
  .tally[href*="github"] {
    text-shadow: 0 1px 1px #2f2f2f;
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(48%, transparent), color-stop(48%, rgba(22, 22, 22, 0.15))), radial-gradient(circle at center bottom, rgba(73, 73, 73, 0.7), rgba(22, 22, 22, 0.7));
    background-image: linear-gradient(to bottom, transparent 48%, rgba(22, 22, 22, 0.15) 48%), radial-gradient(circle at center bottom, rgba(73, 73, 73, 0.7), rgba(22, 22, 22, 0.7)); }
  .tally[href*="codepen"] {
    text-shadow: 0 1px 1px #212121;
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(48%, transparent), color-stop(48%, rgba(8, 8, 8, 0.15))), radial-gradient(circle at center bottom, rgba(59, 59, 59, 0.7), rgba(8, 8, 8, 0.7));
    background-image: linear-gradient(to bottom, transparent 48%, rgba(8, 8, 8, 0.15) 48%), radial-gradient(circle at center bottom, rgba(59, 59, 59, 0.7), rgba(8, 8, 8, 0.7)); }
  .tally[href*="last"] {
    text-shadow: 0 1px 1px #c3000d;
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(48%, transparent), color-stop(48%, rgba(144, 0, 10, 0.15))), radial-gradient(circle at center bottom, rgba(246, 0, 16, 0.7), rgba(144, 0, 10, 0.7));
    background-image: linear-gradient(to bottom, transparent 48%, rgba(144, 0, 10, 0.15) 48%), radial-gradient(circle at center bottom, rgba(246, 0, 16, 0.7), rgba(144, 0, 10, 0.7)); }
  .tally[href*="google-plus"] {
    text-shadow: 0 1px 1px #dc4e41;
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(48%, transparent), color-stop(48%, rgba(198, 50, 36, 0.15))), radial-gradient(circle at center bottom, rgba(228, 118, 108, 0.7), rgba(198, 50, 36, 0.7));
    background-image: linear-gradient(to bottom, transparent 48%, rgba(198, 50, 36, 0.15) 48%), radial-gradient(circle at center bottom, rgba(228, 118, 108, 0.7), rgba(198, 50, 36, 0.7)); }
  .tally[type="submit"]:hover, .tally[type="submit"]:focus, .tally[type="submit"]:active, .tally[type="button"]:hover, .tally[type="button"]:focus, .tally[type="button"]:active, .tally[href]:hover, .tally[href]:focus, .tally[href]:active {
    color: #fff;
    background-color: rgba(35, 35, 35, 0.25); }
  .tally[type="submit"]:active, .tally[type="button"]:active, .tally[href]:active {
    -webkit-box-shadow: 0 1px 4px -1px rgba(35, 35, 35, 0);
            box-shadow: 0 1px 4px -1px rgba(35, 35, 35, 0); }
  .tally svg {
    position: absolute;
    left: calc(0.22222 * 1rem);
    top: calc(0.11111 * 1rem);
    height: calc(1.33333 * 1rem);
    fill: #fff;
    margin-right: calc(0.27778 * 1rem); }
  .tally span {
    margin-left: calc(1.33333 * 1rem); }

.tally--hash::before {
  content: "#";
  margin-right: calc(0.16667 * 1rem); }

@media (min-width: 41.25em) {
  .articles .article {
    position: relative; }
    .articles .article:after {
      content: "";
      position: absolute;
      top: calc(-0.38889 * 1rem);
      left: calc(-0.55556 * 1rem);
      right: calc(-0.55556 * 1rem);
      bottom: calc(-0.55556 * 1rem);
      background-image: radial-gradient(circle at center, transparent, rgba(35, 35, 35, 0.05));
      z-index: -1; } }

.article + .article:before {
  content: "...";
  display: block;
  margin: calc(2.77778 * 1rem) 0;
  text-align: center;
  color: #e01258; }

@media (min-width: 41.25em) {
  .article + .article:after {
    top: calc(4.05556 * 1rem); } }

.article img {
  display: block;
  max-width: 100%;
  margin-right: auto;
  margin-left: auto; }

.article__title {
  background-image: bg-v;
  color: #e01258; }

.article__thumb {
  display: block;
  margin-top: calc(0.55556 * 1rem);
  position: relative; }
  .article__thumb:after {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    margin: calc(0.38889 * 1rem);
    border: 1px solid #f8ac9e;
    z-index: 1; }

.content h2,
.content h3,
.content h4,
.content h5,
.content h6 {
  color: #ec3211; }

.content code {
  padding: 0 calc(0.27778 * 1rem);
  color: #e01258; }

.content li a,
.content p a {
  color: #ec3211;
  -webkit-transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81);
  transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81); }
  .content li a:hover, .content li a:focus,
  .content p a:hover,
  .content p a:focus {
    color: #e01258; }

.content blockquote {
  font-size: 1.13778rem;
  background-color: rgba(35, 35, 35, 0.05);
  color: #636363;
  overflow: hidden;
  position: relative;
  padding: calc(0.55556 * 1rem) calc(2.77778 * 1rem);
  margin: 0; }
  .content blockquote:before, .content blockquote:after {
    content: "”";
    position: absolute;
    font-size: 13.21749rem;
    color: #f4f4f4;
    font-family: "Playfair Display", serif;
    z-index: -1;
    -webkit-transform-origin: center;
            transform-origin: center;
    -webkit-transform: rotate(20deg);
            transform: rotate(20deg); }
  .content blockquote:before {
    content: "”";
    top: calc(-6.94444 * 1rem);
    left: calc(-2.22222 * 1rem); }
  .content blockquote:after {
    content: "“";
    top: calc(-4.44444 * 1rem);
    right: calc(-0.55556 * 1rem); }

.highlight {
  font-size: 0.87891rem;
  padding: 0;
  margin: 0;
  background-image: -webkit-gradient(linear, left top, right top, color-stop(50%, transparent), color-stop(50%, rgba(0, 0, 0, 0.15))), radial-gradient(circle at center bottom, rgba(35, 35, 35, 0.7), rgba(0, 0, 0, 0.7));
  background-image: linear-gradient(to right, transparent 50%, rgba(0, 0, 0, 0.15) 50%), radial-gradient(circle at center bottom, rgba(35, 35, 35, 0.7), rgba(0, 0, 0, 0.7));
  color: #fff;
  padding: calc(0.55556 * 1rem);
  position: relative;
  overflow-x: auto; }
  .highlight:after {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    margin: calc(0.38889 * 1rem);
    border: 1px solid rgba(255, 255, 255, 0.1);
    z-index: 1; }
  .highlight .line {
    margin-right: calc(0.27778 * 1rem);
    margin-left: calc(0.27778 * 1rem); }
  .highlight pre {
    padding: 0;
    margin: 0; }
  .highlight a {
    color: inherit; }

body {
  color: #383738;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  min-height: 100vh; }

.wrapper {
  -webkit-box-flex: 1;
      -ms-flex: 1 1 auto;
          flex: 1 1 auto; }

.sig {
  -webkit-box-align: baseline;
      -ms-flex-align: baseline;
          align-items: baseline;
  background-image: -webkit-gradient(linear, left top, right top, from(rgba(30, 217, 217, 0.15)), to(rgba(30, 186, 218, 0.15)));
  background-image: linear-gradient(to right, rgba(30, 217, 217, 0.15), rgba(30, 186, 218, 0.15));
  color: #383738;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  line-height: 1;
  padding: calc(0.05556 * 1rem) calc(0.55556 * 1rem) calc(0.33333 * 1rem); }
  .sig p {
    font-size: 0.9375rem;
    margin: 0; }

.sig__link {
  -webkit-box-align: baseline;
      -ms-flex-align: baseline;
          align-items: baseline;
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  text-decoration: none;
  -webkit-transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81);
  transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81); }
  .sig__link svg {
    height: calc(1.11111 * 1rem);
    margin-right: calc(0.11111 * 1rem);
    -webkit-transform: translateY(calc(0.22222 * 1rem));
            transform: translateY(calc(0.22222 * 1rem));
    -webkit-transform-origin: center;
            transform-origin: center;
    -webkit-transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81) forwards;
    transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81) forwards;
    width: calc(1.11111 * 1rem); }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
