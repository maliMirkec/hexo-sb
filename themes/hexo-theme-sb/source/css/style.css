@charset "UTF-8";
/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

html {
  font-size: 17px; }
  @media screen and (min-width: 332px) {
    html {
      font-size: calc(17px + 4 * (100vw - 332px) / 328); } }
  @media screen and (min-width: 660px) {
    html {
      font-size: 21px; } }

body {
  font-size: 1rem;
  line-height: 1.6; }

h1 {
  font-size: 1.29454rem;
  margin-top: 1.78755rem; }

h2 {
  font-size: 1.21363rem;
  margin-top: 1.67583rem; }

h3 {
  font-size: 1.13778rem;
  margin-top: 1.57109rem; }

h4 {
  font-size: 1.06667rem;
  margin-top: 1.4729rem; }

h5 {
  font-size: 1rem;
  margin-top: 1.38084rem; }

h6 {
  font-size: 0.9375rem;
  margin-top: 1.29454rem; }

h1 a,
h2 a,
h3 a,
h4 a,
h5 a,
h6 a {
  color: inherit;
  text-decoration: none; }

p {
  margin-top: 1.06667rem; }

code {
  line-height: 1; }

::-moz-selection {
  background-color: #fcd7e3; }

::selection {
  background-color: #fcd7e3; }

body {
  color: #131313;
  font-family: serif;
  -webkit-font-smoothing: auto;
  font-style: normal;
  font-weight: 400;
  -moz-osx-font-smoothing: auto; }

h1,
h2,
h3,
h4,
h5,
h6 {
  letter-spacing: calc(50 / 1000 * 1em);
  font-style: normal;
  font-weight: bold;
  text-transform: uppercase; }

.fonts-stage-1 body {
  font-family: "Barlow Subset";
  font-style: normal;
  font-weight: 400; }

.fonts-stage-1 h1,
.fonts-stage-1 h2,
.fonts-stage-1 h3,
.fonts-stage-1 h4,
.fonts-stage-1 h5,
.fonts-stage-1 h6 {
  font-family: "Playfair Display Subset"; }

.fonts-stage-2 body {
  font-family: "Barlow"; }

.fonts-stage-2 h1,
.fonts-stage-2 h2,
.fonts-stage-2 h3,
.fonts-stage-2 h4,
.fonts-stage-2 h5,
.fonts-stage-2 h6 {
  font-family: "Playfair Display"; }

pre,
code,
.code {
  font-family: "Courier New", Courier, monospace; }

.header {
  background-image: radial-gradient(circle at center bottom, rgba(224, 18, 71, 0.4), rgba(224, 18, 88, 0.6)), -webkit-gradient(linear, left top, right top, color-stop(50%, rgba(224, 18, 88, 0.5)), color-stop(50%, rgba(224, 18, 88, 0.4)));
  background-image: radial-gradient(circle at center bottom, rgba(224, 18, 71, 0.4), rgba(224, 18, 88, 0.6)), linear-gradient(to right, rgba(224, 18, 88, 0.5) 50%, rgba(224, 18, 88, 0.4) 50%); }
  @media (min-width: 41.25em) {
    .header {
      background-image: radial-gradient(circle at center bottom, rgba(224, 18, 71, 0.6), rgba(224, 18, 88, 0.4)), -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(224, 18, 88, 0.4)), color-stop(50%, rgba(224, 18, 88, 0.7)));
      background-image: radial-gradient(circle at center bottom, rgba(224, 18, 71, 0.6), rgba(224, 18, 88, 0.4)), linear-gradient(to bottom, rgba(224, 18, 88, 0.4) 50%, rgba(224, 18, 88, 0.7) 50%); } }

.nav__checkbox {
  left: -9999px;
  position: absolute; }

.nav__toggle {
  -webkit-transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81);
  transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81);
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(20%, #fff), color-stop(20%, transparent), color-stop(40%, transparent), color-stop(40%, #fff), color-stop(60%, #fff), color-stop(60%, transparent), color-stop(80%, transparent), color-stop(80%, #fff));
  background-image: linear-gradient(to bottom, #fff 20%, transparent 20%, transparent 40%, #fff 40%, #fff 60%, transparent 60%, transparent 80%, #fff 80%);
  border-radius: calc(0.2381 * 1rem);
  cursor: pointer;
  display: block;
  height: calc(1.42857 * 1rem);
  position: absolute;
  right: calc(0.95238 * 1rem);
  text-indent: -9999px;
  top: calc(1.66667 * 1rem);
  width: calc(1.42857 * 1rem);
  z-index: 1; }
  @media (min-width: 41.25em) {
    .nav__toggle {
      display: none; } }
  .nav__checkbox:checked + .nav__toggle {
    background-image: linear-gradient(45deg, transparent 40%, #fff 40%, #fff 60%, transparent 60%), linear-gradient(-45deg, transparent 40%, #fff 40%, #fff 60%, transparent 60%); }

.nav__list {
  margin: 0;
  padding: 0;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  list-style: none; }
  @media (min-width: 41.25em) {
    .nav__list {
      -webkit-box-align: stretch;
          -ms-flex-align: stretch;
              align-items: stretch;
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
          -ms-flex-direction: row;
              flex-direction: row; } }

.nav__item {
  -webkit-transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81);
  transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81);
  -webkit-box-align: stretch;
      -ms-flex-align: stretch;
          align-items: stretch;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 0;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto;
  font-size: 0.67893rem; }
  @media (max-width: 41.24em) {
    .nav__item {
      width: 100%; }
      .nav__item:not(:nth-child(1)) {
        display: none; }
        .nav__checkbox:checked ~ .nav__list .nav__item:not(:nth-child(1)) {
          display: -webkit-box;
          display: -ms-flexbox;
          display: flex; } }
  .nav__item:hover {
    background-color: rgba(255, 255, 255, 0.15); }
  @media (min-width: 41.25em) {
    .nav__list--2 .nav__item {
      max-width: calc(100% / 3);
      min-width: calc(5.71429 * 1rem); }
      .nav__list--2 .nav__item:nth-child(-n + 2) {
        -webkit-box-ordinal-group: 1;
            -ms-flex-order: 0;
                order: 0; }
      .nav__list--2 .nav__item:nth-child(n + 3) {
        -webkit-box-ordinal-group: 3;
            -ms-flex-order: 2;
                order: 2; } }
  @media (min-width: 41.25em) {
    .nav__list--4 .nav__item {
      max-width: calc(5.71429 * 1rem);
      width: calc(100% / 5); }
      .nav__list--4 .nav__item:nth-child(-n + 3) {
        -webkit-box-ordinal-group: 1;
            -ms-flex-order: 0;
                order: 0; }
      .nav__list--4 .nav__item:nth-child(n + 4) {
        -webkit-box-ordinal-group: 3;
            -ms-flex-order: 2;
                order: 2; } }
  .nav__list--6 .nav__item {
    font-size: 0.67893rem; }
    @media (min-width: 41.25em) {
      .nav__list--6 .nav__item {
        max-width: calc(4.7619 * 1rem);
        width: calc(100% / 7); }
        .nav__list--6 .nav__item:nth-child(-n + 4) {
          -webkit-box-ordinal-group: 1;
              -ms-flex-order: 0;
                  order: 0; }
        .nav__list--6 .nav__item:nth-child(n + 5) {
          -webkit-box-ordinal-group: 3;
              -ms-flex-order: 2;
                  order: 2; } }
  .nav__list--8 .nav__item {
    font-size: 0.59672rem; }
    @media (min-width: 41.25em) {
      .nav__list--8 .nav__item {
        max-width: calc(4.7619 * 1rem);
        width: calc(100% / 9); }
        .nav__list--8 .nav__item:nth-child(-n + 5) {
          -webkit-box-ordinal-group: 1;
              -ms-flex-order: 0;
                  order: 0; }
        .nav__list--8 .nav__item:nth-child(n + 6) {
          -webkit-box-ordinal-group: 3;
              -ms-flex-order: 2;
                  order: 2; } }
  [class*="nav__list--"] .nav__item:nth-child(1) {
    min-height: calc(4.7619 * 1rem); }
    @media (min-width: 41.25em) {
      [class*="nav__list--"] .nav__item:nth-child(1) {
        -webkit-box-ordinal-group: 2;
            -ms-flex-order: 1;
                order: 1; } }

.nav__link {
  text-shadow: 0 1px 1px #e01258;
  letter-spacing: calc(100 / 1000 * 1em);
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  color: #fff;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 1;
      -ms-flex: 1 1 auto;
          flex: 1 1 auto;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  padding: calc(0.71429 * 1rem) calc(0.2381 * 1rem);
  position: relative;
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }
  .nav__link svg {
    display: block;
    height: calc(2.38095 * 1rem);
    width: calc(2.38095 * 1rem); }

.details {
  border-bottom: 1px solid #e01258;
  border-top: 1px solid #e01258;
  color: #e01258;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  font-size: 0.7242rem;
  margin-top: calc(0.33333 * 1rem);
  padding: calc(0.2381 * 1rem) calc(0.38095 * 1rem); }

.details--footer {
  margin-top: calc(1.90476 * 1rem); }

.details__list {
  margin: 0;
  padding: 0;
  -webkit-box-align: stretch;
      -ms-flex-align: stretch;
          align-items: stretch;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  list-style: none; }
  @media (min-width: 41.25em) {
    .details__list {
      -webkit-box-align: baseline;
          -ms-flex-align: baseline;
              align-items: baseline;
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
          -ms-flex-direction: row;
              flex-direction: row; } }

.details__item {
  -webkit-box-flex: 1;
      -ms-flex: 1 1 auto;
          flex: 1 1 auto; }
  @media (min-width: 41.25em) {
    .details__item {
      -webkit-box-flex: 0;
          -ms-flex: 0 1 auto;
              flex: 0 1 auto; }
      .details__item + .details__item {
        margin-left: calc(0.28571 * 1rem); } }
  .details__item .text[href] {
    color: inherit;
    text-decoration: none; }
    .details__item .text[href]:hover, .details__item .text[href]:focus {
      text-decoration: underline; }
  .details__item.details__item--separator:after {
    content: '>';
    margin-left: calc(0.28571 * 1rem); }

.footer {
  background-image: radial-gradient(circle at center bottom, rgba(241, 78, 120, 0.6), rgba(241, 78, 133, 0.4)), -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(241, 78, 133, 0.4)), color-stop(50%, rgba(241, 78, 133, 0.7)));
  background-image: radial-gradient(circle at center bottom, rgba(241, 78, 120, 0.6), rgba(241, 78, 133, 0.4)), linear-gradient(to bottom, rgba(241, 78, 133, 0.4) 50%, rgba(241, 78, 133, 0.7) 50%);
  color: #131313;
  font-family: sans-serif;
  font-size: 0.67893rem;
  margin-top: calc(0.95238 * 1rem);
  text-align: center; }
  .footer:not(:empty) {
    padding: calc(0.2381 * 1rem); }
  .footer p {
    margin: calc(0.47619 * 1rem) 0; }
    .footer p a {
      color: inherit; }

.contact {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: baseline;
      -ms-flex-align: baseline;
          align-items: baseline;
  list-style: none;
  margin: 0;
  padding: 0; }

.contact__item + .contact__item {
  margin-left: calc(0.47619 * 1rem); }

body {
  background-color: rgba(224, 18, 88, 0.01);
  background-image: url("/gfx/png/logo-white-bg.png");
  background-position: top 110px right;
  background-size: 50px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap; }

.wrapper {
  margin-left: auto;
  margin-right: auto;
  max-width: calc(100% - calc(0.95238 * 1rem));
  padding: calc(0.47619 * 1rem); }
  @media (min-width: 41.25em) {
    .wrapper {
      padding: calc(0.47619 * 1rem) 0;
      width: 660px; } }

.pagination {
  margin-top: calc(1.90476 * 1rem);
  font-size: 1rem; }
  .pagination p {
    font-weight: bold; }

.pagination__list {
  margin: 0;
  padding: 0;
  list-style: none; }

.pagination__list--inline {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between; }

.pagination__item {
  margin-bottom: calc(0.95238 * 1rem); }

.pagination__link {
  -webkit-transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81);
  transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81);
  color: #4b4b4b; }
  .pagination__link:hover, .pagination__link:focus {
    color: #131313; }

.tally {
  letter-spacing: calc(50 / 1000 * 1em);
  -webkit-box-shadow: 0 1px 4px -1px rgba(19, 19, 19, 0.6);
          box-shadow: 0 1px 4px -1px rgba(19, 19, 19, 0.6);
  text-shadow: 0 1px 1px #e01258;
  -webkit-transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81);
  transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81);
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  background-image: radial-gradient(circle at center bottom, rgba(224, 18, 71, 0.6), rgba(224, 18, 88, 0.4)), -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(224, 18, 88, 0.4)), color-stop(50%, rgba(224, 18, 88, 0.7)));
  background-image: radial-gradient(circle at center bottom, rgba(224, 18, 71, 0.6), rgba(224, 18, 88, 0.4)), linear-gradient(to bottom, rgba(224, 18, 88, 0.4) 50%, rgba(224, 18, 88, 0.7) 50%);
  border-radius: calc(0.19048 * 1rem);
  color: #fff;
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-family: "Barlow";
  font-size: 0.7242rem;
  margin-bottom: calc(0.2381 * 1rem);
  margin-top: calc(0.2381 * 1rem);
  padding: calc(0.09524 * 1rem) calc(0.47619 * 1rem);
  position: relative;
  text-decoration: none; }
  .tally + .tally {
    margin-left: calc(0.47619 * 1rem); }
  .tally[type="submit"]:hover, .tally[type="submit"]:focus, .tally[type="submit"]:active, .tally[type="button"]:hover, .tally[type="button"]:focus, .tally[type="button"]:active, .tally[href]:hover, .tally[href]:focus, .tally[href]:active {
    background-color: rgba(19, 19, 19, 0.25);
    color: #fff; }
  .tally[type="submit"]:active, .tally[type="button"]:active, .tally[href]:active {
    -webkit-box-shadow: 0 1px 4px -1px rgba(19, 19, 19, 0);
            box-shadow: 0 1px 4px -1px rgba(19, 19, 19, 0); }
  .tally svg {
    fill: #fff;
    height: calc(1.14286 * 1rem);
    left: calc(0.09524 * 1rem);
    margin-right: calc(0.2381 * 1rem);
    position: absolute;
    top: calc(0.09524 * 1rem);
    width: calc(1.33333 * 1rem); }
  .tally span {
    text-transform: capitalize; }
  .tally svg + span {
    margin-left: calc(1.04762 * 1rem); }
  .tally[href*="//www.mail"], .tally[href*="//mail"] {
    text-shadow: 0 1px 1px #e01258;
    background-image: radial-gradient(circle at center bottom, rgba(224, 18, 71, 0.6), rgba(224, 18, 88, 0.4)), -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(224, 18, 88, 0.4)), color-stop(50%, rgba(224, 18, 88, 0.7)));
    background-image: radial-gradient(circle at center bottom, rgba(224, 18, 71, 0.6), rgba(224, 18, 88, 0.4)), linear-gradient(to bottom, rgba(224, 18, 88, 0.4) 50%, rgba(224, 18, 88, 0.7) 50%); }
    .tally[href*="//www.mail"] svg, .tally[href*="//mail"] svg {
      left: 0; }
  .tally[href*="//www.twitter"], .tally[href*="//twitter"] {
    text-shadow: 0 1px 1px #55acee;
    background-image: radial-gradient(circle at center bottom, rgba(39, 133, 233, 0.6), rgba(39, 149, 233, 0.4)), -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(39, 149, 233, 0.4)), color-stop(50%, rgba(39, 149, 233, 0.7)));
    background-image: radial-gradient(circle at center bottom, rgba(39, 133, 233, 0.6), rgba(39, 149, 233, 0.4)), linear-gradient(to bottom, rgba(39, 149, 233, 0.4) 50%, rgba(39, 149, 233, 0.7) 50%); }
    .tally[href*="//www.twitter"] svg, .tally[href*="//twitter"] svg {
      left: 0; }
  .tally[href*="//www.linkedin"], .tally[href*="//linkedin"] {
    text-shadow: 0 1px 1px #0077b5;
    background-image: radial-gradient(circle at center bottom, rgba(0, 104, 181, 0.6), rgba(0, 119, 181, 0.4)), -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(0, 119, 181, 0.4)), color-stop(50%, rgba(0, 119, 181, 0.7)));
    background-image: radial-gradient(circle at center bottom, rgba(0, 104, 181, 0.6), rgba(0, 119, 181, 0.4)), linear-gradient(to bottom, rgba(0, 119, 181, 0.4) 50%, rgba(0, 119, 181, 0.7) 50%); }
    .tally[href*="//www.linkedin"] svg, .tally[href*="//linkedin"] svg {
      left: 0; }
  .tally[href*="//www.facebook"], .tally[href*="//facebook"] {
    text-shadow: 0 1px 1px #3b5998;
    background-image: radial-gradient(circle at center bottom, rgba(59, 81, 152, 0.6), rgba(59, 89, 152, 0.4)), -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(59, 89, 152, 0.4)), color-stop(50%, rgba(59, 89, 152, 0.7)));
    background-image: radial-gradient(circle at center bottom, rgba(59, 81, 152, 0.6), rgba(59, 89, 152, 0.4)), linear-gradient(to bottom, rgba(59, 89, 152, 0.4) 50%, rgba(59, 89, 152, 0.7) 50%); }
    .tally[href*="//www.facebook"] svg, .tally[href*="//facebook"] svg {
      left: 0; }
  .tally[href*="//www.medium"], .tally[href*="//medium"] {
    text-shadow: 0 1px 1px #00ab6b;
    background-image: radial-gradient(circle at center bottom, rgba(0, 171, 121, 0.6), rgba(0, 171, 107, 0.4)), -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(0, 171, 107, 0.4)), color-stop(50%, rgba(0, 171, 107, 0.7)));
    background-image: radial-gradient(circle at center bottom, rgba(0, 171, 121, 0.6), rgba(0, 171, 107, 0.4)), linear-gradient(to bottom, rgba(0, 171, 107, 0.4) 50%, rgba(0, 171, 107, 0.7) 50%); }
    .tally[href*="//www.medium"] svg, .tally[href*="//medium"] svg {
      left: 0; }
  .tally[href*="//www.github"], .tally[href*="//github"] {
    text-shadow: 0 1px 1px #2f2f2f;
    background-image: radial-gradient(circle at center bottom, rgba(47, 47, 47, 0.6), rgba(47, 47, 47, 0.4)), -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(47, 47, 47, 0.4)), color-stop(50%, rgba(47, 47, 47, 0.7)));
    background-image: radial-gradient(circle at center bottom, rgba(47, 47, 47, 0.6), rgba(47, 47, 47, 0.4)), linear-gradient(to bottom, rgba(47, 47, 47, 0.4) 50%, rgba(47, 47, 47, 0.7) 50%); }
    .tally[href*="//www.github"] svg, .tally[href*="//github"] svg {
      left: 0; }
  .tally[href*="//www.codepen"], .tally[href*="//codepen"] {
    text-shadow: 0 1px 1px #212121;
    background-image: radial-gradient(circle at center bottom, rgba(33, 33, 33, 0.6), rgba(33, 33, 33, 0.4)), -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(33, 33, 33, 0.4)), color-stop(50%, rgba(33, 33, 33, 0.7)));
    background-image: radial-gradient(circle at center bottom, rgba(33, 33, 33, 0.6), rgba(33, 33, 33, 0.4)), linear-gradient(to bottom, rgba(33, 33, 33, 0.4) 50%, rgba(33, 33, 33, 0.7) 50%); }
    .tally[href*="//www.codepen"] svg, .tally[href*="//codepen"] svg {
      left: 0; }
  .tally[href*="//www.last"], .tally[href*="//last"] {
    text-shadow: 0 1px 1px #c3000d;
    background-image: radial-gradient(circle at center bottom, rgba(195, 3, 0, 0.6), rgba(195, 0, 13, 0.4)), -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(195, 0, 13, 0.4)), color-stop(50%, rgba(195, 0, 13, 0.7)));
    background-image: radial-gradient(circle at center bottom, rgba(195, 3, 0, 0.6), rgba(195, 0, 13, 0.4)), linear-gradient(to bottom, rgba(195, 0, 13, 0.4) 50%, rgba(195, 0, 13, 0.7) 50%); }
    .tally[href*="//www.last"] svg, .tally[href*="//last"] svg {
      left: calc(0.14286 * 1rem); }
  .tally[href*="//www.google-plus"], .tally[href*="//google-plus"] {
    text-shadow: 0 1px 1px #dc4e41;
    background-image: radial-gradient(circle at center bottom, rgba(220, 91, 65, 0.6), rgba(220, 78, 65, 0.4)), -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(220, 78, 65, 0.4)), color-stop(50%, rgba(220, 78, 65, 0.7)));
    background-image: radial-gradient(circle at center bottom, rgba(220, 91, 65, 0.6), rgba(220, 78, 65, 0.4)), linear-gradient(to bottom, rgba(220, 78, 65, 0.4) 50%, rgba(220, 78, 65, 0.7) 50%); }
    .tally[href*="//www.google-plus"] svg, .tally[href*="//google-plus"] svg {
      left: 0; }

.tally--hash::before {
  content: '#';
  margin-right: calc(0.14286 * 1rem); }

.article {
  display: block;
  font-size: 1rem;
  padding: calc(0.47619 * 1rem); }
  @media (min-width: 41.25em) {
    .articles .article {
      background-color: #f7f7f7;
      background-image: url("/gfx/png/sb-flat.png");
      background-position: bottom right 5px;
      background-repeat: no-repeat;
      background-size: 60px;
      -webkit-box-shadow: 0 0 2px 0 #e6e6e6;
              box-shadow: 0 0 2px 0 #e6e6e6;
      position: relative; }
      .articles .article:after {
        background-color: #e01269;
        -webkit-box-shadow: 0 1px 2px -1px #131313, 0 1px 4px -1px #131313;
                box-shadow: 0 1px 2px -1px #131313, 0 1px 4px -1px #131313;
        content: '';
        height: 5px;
        left: calc(-0.19048 * 1rem);
        position: absolute;
        right: calc(-0.19048 * 1rem);
        top: 100%; } }
  .article:first-child {
    margin-top: calc(0.95238 * 1rem); }
  .article + .article {
    margin-top: calc(2.85714 * 1rem); }
  .article img {
    background-color: #fff;
    display: block;
    margin-left: auto;
    margin-right: auto;
    max-width: 100%; }
  .article p:last-child {
    margin-bottom: 0; }

.article__title {
  text-shadow: 0 1px 1px #fff;
  color: #ef3675;
  margin-top: 0; }

.article__thumb {
  display: block;
  margin-top: calc(0.47619 * 1rem);
  position: relative; }
  .article__thumb:after {
    border: 1px solid #f695b6;
    bottom: 0;
    content: '';
    left: 0;
    margin: calc(0.33333 * 1rem);
    position: absolute;
    right: 0;
    top: 0;
    z-index: 1; }

.content h1,
.content h2,
.content h3,
.content h4,
.content h5,
.content h6 {
  text-shadow: 0 1px 1px #fff; }
  .content h1 a,
  .content h2 a,
  .content h3 a,
  .content h4 a,
  .content h5 a,
  .content h6 a {
    -webkit-transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81);
    transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81); }
    .content h1 a:hover, .content h1 a:focus,
    .content h2 a:hover,
    .content h2 a:focus,
    .content h3 a:hover,
    .content h3 a:focus,
    .content h4 a:hover,
    .content h4 a:focus,
    .content h5 a:hover,
    .content h5 a:focus,
    .content h6 a:hover,
    .content h6 a:focus {
      color: #e01269; }

.content p {
  text-shadow: 0 1px 1px #fff; }

.content code {
  color: #e01258;
  padding: 0 calc(0.2381 * 1rem); }

.content li a,
.content p a {
  -webkit-transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81);
  transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81);
  color: #e01258;
  word-break: break-word; }
  .content li a:hover, .content li a:focus,
  .content p a:hover,
  .content p a:focus {
    color: #e012ae; }

.content blockquote {
  background-color: rgba(19, 19, 19, 0.05);
  color: #535353;
  font-style: italic;
  margin: 0;
  overflow: hidden;
  padding: calc(1.42857 * 1rem) calc(2.38095 * 1rem);
  position: relative; }
  .content blockquote.right {
    text-align: right; }
  .content blockquote:before, .content blockquote:after {
    color: whitesmoke;
    font-family: "Playfair Display";
    font-size: 13.21749rem;
    position: absolute;
    -webkit-transform: rotate(20deg);
            transform: rotate(20deg);
    -webkit-transform-origin: center;
            transform-origin: center;
    z-index: -1; }
  .content blockquote:before {
    content: '“';
    left: calc(-3.80952 * 1rem);
    top: calc(-7.14286 * 1rem); }
  .content blockquote:after {
    bottom: calc(-10.2381 * 1rem);
    content: '”';
    right: calc(1.42857 * 1rem); }
  .content blockquote footer {
    color: #131313;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    font-size: 0.9375rem;
    font-style: italic;
    padding: 1.06667rem 0; }
  .content blockquote p {
    margin-top: 0; }
  .content blockquote a {
    color: inherit;
    text-decoration: none; }

.content strong {
  letter-spacing: calc(25 / 1000 * 1em); }

.content hr {
  background-color: rgba(224, 18, 88, 0.05);
  border: 0;
  height: 1px;
  margin-bottom: calc(1.90476 * 1rem);
  margin-top: calc(1.90476 * 1rem); }

.content h1 {
  color: #f36595; }

.content h2 {
  color: #f25c8f; }

.content h3 {
  color: #f15288; }

.content h4 {
  color: #f04982; }

.content h5 {
  color: #f0407b; }

.content h6 {
  color: #ef3675; }

.cover {
  display: block;
  position: relative; }
  @media (min-width: 60em) {
    .cover {
      background-color: #cff;
      margin-left: -160px;
      margin-right: -160px; }
      .cover img {
        width: 100%; } }

.highlight {
  margin: 0;
  padding: 0;
  background-image: radial-gradient(circle at center bottom, rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.6)), -webkit-gradient(linear, left top, right top, color-stop(50%, rgba(0, 0, 0, 0.5)), color-stop(50%, rgba(0, 0, 0, 0.4)));
  background-image: radial-gradient(circle at center bottom, rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.6)), linear-gradient(to right, rgba(0, 0, 0, 0.5) 50%, rgba(0, 0, 0, 0.4) 50%);
  color: #fff;
  font-size: 0.87891rem;
  overflow-x: auto;
  padding: calc(0.47619 * 1rem);
  position: relative; }
  .highlight figcaption {
    color: #f8a3c0;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    padding: 0 calc(0.33333 * 1rem); }
  .highlight .line {
    margin-left: calc(0.2381 * 1rem);
    margin-right: calc(0.2381 * 1rem); }
  .highlight .marked {
    background-color: rgba(255, 255, 255, 0.25); }
  .highlight pre {
    margin: 0;
    padding: 0; }
  .highlight a {
    color: inherit; }

.video-container {
  padding-bottom: calc(9 / 16 * 100%);
  position: relative; }
  .video-container iframe {
    bottom: 0;
    height: 100%;
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
    width: 100%; }

.wrapper--home {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex; }
  @media (min-width: 41.25em) {
    .wrapper--home {
      width: 100%; } }
  @media (min-width: 60em) {
    .wrapper--home {
      width: 960px; } }

.home {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 1;
      -ms-flex: 1 1 auto;
          flex: 1 1 auto;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  margin-top: calc(0.95238 * 1rem); }
  .home a {
    color: inherit;
    text-decoration: none;
    word-break: break-word; }
    .home a:after {
      -webkit-transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81);
      transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81);
      content: '→';
      display: inline-block;
      margin-left: calc(0.47619 * 1rem);
      -webkit-transform: rotate(-180deg) scale(0);
              transform: rotate(-180deg) scale(0); }
    .home a:hover, .home a:focus {
      color: #e01258; }
      .home a:hover:after, .home a:focus:after {
        -webkit-transform: rotate(0deg) scale(1);
                transform: rotate(0deg) scale(1); }
  @supports (display: grid) {
    .home {
      display: grid;
      grid-gap: calc(1.42857 * 1rem);
      grid-template-columns: repeat(1, minmax(auto, 1fr));
      grid-template-rows: repeat(5, 1fr); }
      @media (min-width: 41.25em) {
        .home {
          grid-template-columns: repeat(2, minmax(auto, 1fr));
          grid-template-rows: repeat(3, 1fr); } } }

.home__box {
  text-shadow: 0 1px 1px #fff;
  background-color: #f7f7f7;
  background-image: url("/gfx/png/sb-flat.png");
  background-position: top 5% right 5%;
  background-repeat: no-repeat;
  background-size: 60px;
  border: 1px solid #e01258;
  -webkit-box-shadow: 0 0 2px 0 #e6e6e6;
          box-shadow: 0 0 2px 0 #e6e6e6;
  color: #131313;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 1;
      -ms-flex: 1 1 auto;
          flex: 1 1 auto;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end;
  padding: 15% calc(0.95238 * 1rem) calc(0.95238 * 1rem);
  position: relative; }
  .home__box:after {
    background-color: #e01269;
    -webkit-box-shadow: 0 1px 2px -1px #131313, 0 1px 4px -1px #131313;
            box-shadow: 0 1px 2px -1px #131313, 0 1px 4px -1px #131313;
    content: '';
    height: 4px;
    left: calc(-0.14286 * 1rem);
    position: absolute;
    right: calc(-0.14286 * 1rem);
    top: 100%; }
  .home__box:not(:last-of-type) {
    margin-bottom: calc(1.42857 * 1rem); }
  .home__box h1,
  .home__box h3 {
    letter-spacing: calc(100 / 1000 * 1em);
    color: #e01258; }
  .home__box p {
    letter-spacing: calc(50 / 1000 * 1em);
    margin-bottom: 0;
    margin-top: 0; }
  .home__box ul {
    margin: 0; }
  @supports (display: grid) {
    .home__box {
      min-height: unset; }
      .home__box:not(:last-of-type) {
        margin-bottom: unset; } }

body {
  color: #383738;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  min-height: 100vh; }

.wrapper {
  -webkit-box-flex: 1;
      -ms-flex: 1 1 auto;
          flex: 1 1 auto; }

.sig {
  -webkit-box-align: baseline;
      -ms-flex-align: baseline;
          align-items: baseline;
  background-image: -webkit-gradient(linear, left top, right top, from(rgba(30, 217, 217, 0.15)), to(rgba(30, 186, 218, 0.15)));
  background-image: linear-gradient(to right, rgba(30, 217, 217, 0.15), rgba(30, 186, 218, 0.15));
  color: #383738;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  line-height: 1;
  padding: 0 calc(0.47619 * 1rem) calc(0.28571 * 1rem); }
  .sig p {
    font-size: 0.82397rem;
    margin: 0; }

.sig__link {
  -webkit-box-align: baseline;
      -ms-flex-align: baseline;
          align-items: baseline;
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  text-decoration: none;
  -webkit-transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81);
  transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81); }
  .sig__link svg {
    height: calc(0.95238 * 1rem);
    margin-right: calc(0.09524 * 1rem);
    -webkit-transform: translateY(calc(0.19048 * 1rem));
            transform: translateY(calc(0.19048 * 1rem));
    -webkit-transform-origin: center;
            transform-origin: center;
    -webkit-transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81) forwards;
    transition: all 0.225s cubic-bezier(0.3, 0.6, 0.5, 0.81) forwards;
    width: calc(0.95238 * 1rem); }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
