{"version":3,"sources":["index.js"],"names":["calcPaths","totalDur","document","paths","len","length","totalDuration","forEach","path","totalLen","getTotalLength","pathElem","duration","style","animationDuration","concat","setAttribute","delay","$autograph","classList","querySelector","inView","elementPosition","$elem","getBoundingClientRect","scrollPosition","windowHeight","window","innerHeight","scrollY","pageYOffset","top","clientHeight","removeEventListener","animate","console","log","addEventListener","target","e","$form","add","this","parentNode","matches","contains","remove"],"mappings":"aACA,IAAMA,UAAY,SAACC,GAAnB,IAAMD,EAAYE,SAAZF,iBAAaC,oBAEXE,EAAK,EAEPC,EAJ0B,EAS9B,IAAKD,EAAME,OAAX,OAAKF,EAKL,IAAMG,EAAgBL,GAAY,EAoCpC,OAjCEE,EAAMI,QAAQ,SAAAC,GACZ,IAAMC,EAAWD,EAAKE,iBACtBN,GAAOK,IAIPN,EAAMQ,QAAQ,SAAAH,GAAd,IAAMG,EAAWH,EAEXC,EAAWD,EAAKE,iBAEhBE,EAAWH,EAAWL,EAAME,EAGlCK,EAASE,MAAMC,kBAAf,GAAAC,OAAsCH,EAAW,GAAM,GAAMA,EAA7D,KAIAD,EAASK,MAAAA,eAATL,GAAAA,OAAsBM,EAAtBN,KAIAM,EAASL,aAAW,mBAApBH,GAhBFE,EAmBAK,aAAA,oBAAAP,GAGAQ,GAAA,GAAAL,IAIFV,SAAMgB,KAAUC,UAAYC,IAAAA,aAEnBC,GAIDC,WAAAA,SAAkBC,cAAMC,cAE9B,SAAIC,OAAAA,GACF,IAAAC,EAAAC,OAAAC,YACDC,EAAAF,OAAAE,SAAAF,OAAAG,YALKL,EAAiBI,EAAUH,EAGjC,OAIAH,EAAAC,wBAAAO,IAAAF,EAAAN,EAAAS,aAJIP,EAaAvB,GAAAA,WAAS+B,CACV,IAAAC,QAAA,SAAAA,IANHC,QAAAC,IAAA,GASAlC,OAASmC,cAGXrC,UAAA,GAPME,SAAS+B,oBAAoB,SAAUC,KAU3ChC,SAAWoC,iBAAX,SAA+BJ,SAG3BhC,SAAAmC,iBAAI,QAAA,SAA0BE,GAE5BC,IAAAA,IAAKF,EAAWG,EAAXH,OAALA,GAAAA,IAAAI,KAAAJ,EAAAA,EAAAK,WACD,GAAAL,EAAAM,QAAA,wBAAA,CAJD,IAAMJ,EAAQtC,SAASkB,cAAc,SAKjCkB,EAAOnB,UAAU0B,SAAS,8BAC5BL,EAAMrB,UAAU2B,OAAO,SACvBN,EAAMrB,UAAUsB,IAAI,UAFlBH,EAAOnB,UAAU0B,SAAS,kCAI9BL,EAAArB,UAAA2B,OAAA,SACDN,EAAArB,UAAAsB,IAAA,UAEF,SAAA,GAEHN,QAAQC,IAAI","file":"../../index.min.js","sourcesContent":["// signature animation\nconst calcPaths = (totalDur) => {\n  // get all SVG elements - lines and dots\n  const paths = document.querySelectorAll('.autograph__path')\n  // prepare path length variable\n  let len = 0\n  // prepare animation delay length variable\n  let delay = 0\n\n  // escape if no elements found\n  if (!paths.length) {\n    return false\n  }\n\n  // set duration in seconds of animation to default if not set\n  const totalDuration = totalDur || 7\n\n  // calculate the full path length\n  paths.forEach((path) => {\n    const totalLen = path.getTotalLength()\n    len += totalLen\n  })\n\n  paths.forEach((path) => {\n    const pathElem = path\n    // get current path length\n    const totalLen = path.getTotalLength()\n    // calculate current animation duration\n    const duration = totalLen / len * totalDuration\n\n    // set animation duration and delay\n    pathElem.style.animationDuration = `${duration < 0.2 ? 0.2 : duration}s`\n    pathElem.style.animationDelay = `${delay}s`\n\n    // set dash array and offset to path length - this is how you hide the line\n    pathElem.setAttribute('stroke-dasharray', totalLen)\n    pathElem.setAttribute('stroke-dashoffset', totalLen)\n\n    // set delay for the next path - added .2 seconds to make it more realistic\n    delay += duration + 0.2\n  })\n\n  // set 'animated' class to body which will start the animation\n  document.body.classList.add('animated')\n\n  return true\n}\n\n// Source: https://codepen.io/jr-cologne/pen/zdYdmx?editors=1000\nconst $autograph = document.querySelector('.autograph')\n\nfunction inView ($elem) {\n  const windowHeight = window.innerHeight\n  const scrollY = window.scrollY || window.pageYOffset\n  const scrollPosition = scrollY + windowHeight\n  const elementPosition = $elem.getBoundingClientRect().top + scrollY + $elem.clientHeight\n\n  if (scrollPosition > elementPosition) {\n    return true\n  }\n\n  return false\n}\n\nif ($autograph) {\n  const animate = () => {\n    console.log(1)\n\n    if (inView($autograph)) {\n      calcPaths(5)\n      document.removeEventListener('scroll', animate)\n    }\n  }\n\n  document.addEventListener('scroll', animate)\n}\n\n// form progress steps\ndocument.addEventListener('click', function (e) {\n  // loop parent nodes from the target to the delegation node\n  for (let { target } = e; target && target !== this; target = target.parentNode) {\n    if (target.matches('.kw-multistep-button')) {\n      const $form = document.querySelector('.form')\n      if (target.classList.contains('kw-multistep-button-next')) {\n        $form.classList.remove('step1')\n        $form.classList.add('step2')\n      }\n      if (target.classList.contains('kw-multistep-button-previous')) {\n        $form.classList.remove('step2')\n        $form.classList.add('step1')\n      }\n      break\n    }\n  }\n}, false)\n\nconsole.log('Powered by Starter Project (https://github.com/maliMirkec/starter-project).')\n"]}